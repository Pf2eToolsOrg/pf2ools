import{w as O}from"./index.1134a329.js";import{_ as r}from"./preload-helper.41c905a7.js";import{D as h,n as v}from"./Toasts.d5c3a5f8.js";function g(){const{subscribe:i,set:t,update:s}=O([]);return{subscribe:i,set:t,update:s,trigger:o=>s(n=>(n.push(o),n)),close:()=>s(o=>(o.length>0&&o.shift(),o)),clear:()=>t([])}}const T=g();class E extends h{constructor(t){super(t),this.traitsPrototype=t.traits,Object.defineProperty(this,"traits",{get(){return[...new Set([this.traitsPrototype,this.size,this.rarity??"common"].flat())]}})}get type(){return"ancestry"}get extraHp(){return null}get heritages(){return Storage.heritages.filter(t=>t.ancestryName===this.name&&t.ancestrySource===this.source)}}class y extends h{constructor(t,s){super(t),s&&(this.ancestryName=s.name,this.ancestrySource=s.source)}get type(){return"heritage"}tag(t){return`${this.ancestryName??"Human"}|${this.ancestrySource??"CRB"}|${t??this.name}|${this.name}|${this.source}`}}let V=class{constructor(){this.ancestries=D,this.heritages=j}loadAll(){this.ancestries.load(),this.heritages.load()}};const D=new P;function P(i="ancestries",t=new Map){const s={parse:e=>new Map(JSON.parse(e)).map(a=>new E(a)),stringify:e=>JSON.stringify([...e])},{subscribe:o,set:n,update:_}=v(i,t,{serializer:s});function m(){const e=Object.assign({"/src/data/core/ancestries/ancestry-anadi.json":()=>r(()=>import("./ancestry-anadi.c9147a4b.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-android.json":()=>r(()=>import("./ancestry-android.22dcb6be.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-automaton.json":()=>r(()=>import("./ancestry-automaton.3efcee38.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-azarketi.json":()=>r(()=>import("./ancestry-azarketi.3b917f28.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-catfolk.json":()=>r(()=>import("./ancestry-catfolk.bd5045af.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-conrasu.json":()=>r(()=>import("./ancestry-conrasu.da2e4c50.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-dwarf.json":()=>r(()=>import("./ancestry-dwarf.a9c56490.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-elf.json":()=>r(()=>import("./ancestry-elf.a6be3b57.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-fetchling.json":()=>r(()=>import("./ancestry-fetchling.e33e9008.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-fleshwarp.json":()=>r(()=>import("./ancestry-fleshwarp.595602f6.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-ghoran.json":()=>r(()=>import("./ancestry-ghoran.6df40ca1.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-gnoll.json":()=>r(()=>import("./ancestry-gnoll.126cb3ed.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-gnome.json":()=>r(()=>import("./ancestry-gnome.29e51bc5.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-goblin.json":()=>r(()=>import("./ancestry-goblin.20b6d1cf.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-goloma.json":()=>r(()=>import("./ancestry-goloma.dd6e3190.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-grippli.json":()=>r(()=>import("./ancestry-grippli.fdaff84b.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-halfling.json":()=>r(()=>import("./ancestry-halfling.869fea2a.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-hobgoblin.json":()=>r(()=>import("./ancestry-hobgoblin.1982cdf8.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-human.json":()=>r(()=>import("./ancestry-human.c6d51bf9.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-kashrishi.json":()=>r(()=>import("./ancestry-kashrishi.d4a79401.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-kitsune.json":()=>r(()=>import("./ancestry-kitsune.7a0d21b9.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-kobold.json":()=>r(()=>import("./ancestry-kobold.943b8121.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-leshy.json":()=>r(()=>import("./ancestry-leshy.4488d032.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-lizardfolk.json":()=>r(()=>import("./ancestry-lizardfolk.838c0136.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-nagaji.json":()=>r(()=>import("./ancestry-nagaji.4695cdf8.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-orc.json":()=>r(()=>import("./ancestry-orc.0dc73a51.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-poppet.json":()=>r(()=>import("./ancestry-poppet.65e96566.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-ratfolk.json":()=>r(()=>import("./ancestry-ratfolk.4edfccc8.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-shisk.json":()=>r(()=>import("./ancestry-shisk.454bc4c6.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-shoony.json":()=>r(()=>import("./ancestry-shoony.4507cf60.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-skeleton.json":()=>r(()=>import("./ancestry-skeleton.e21ad147.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-sprite.json":()=>r(()=>import("./ancestry-sprite.e86541d9.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-strix.json":()=>r(()=>import("./ancestry-strix.41a15f4b.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-tengu.json":()=>r(()=>import("./ancestry-tengu.d6b302cb.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-vanara.json":()=>r(()=>import("./ancestry-vanara.f23f4f4a.js"),[],import.meta.url),"/src/data/core/ancestries/ancestry-vishkanya.json":()=>r(()=>import("./ancestry-vishkanya.7c187811.js"),[],import.meta.url)});for(const a in e)e[a]().then(c=>{c.ancestry.forEach(p=>{p._path=a;const d=new E(p);this.update(l=>(l.set(d.hash,d),l))})})}return{subscribe:o,set:n,update:_,load:m}}const j=new A;function A(i="heritages",t=new Map){const s={parse:e=>new Map(JSON.parse(e)).map(a=>new y(a)),stringify:e=>JSON.stringify([...e])},{subscribe:o,set:n,update:_}=v(i,t,{serializer:s});function m(){r(()=>import("./versatile-heritages.2ef7b789.js"),[],import.meta.url).then(e=>{e.versatileHeritage.map(a=>(a._path="$data/ancestries/versatile-heritages.json",a)),e.versatileHeritage.forEach(a=>{const c=new y(a);this.update(u=>(u.set(c.hash,c),u))})})}return{subscribe:o,set:n,update:_,load:m}}export{V as S,T as m};
